name: Build Dev

on:
  workflow_dispatch:
  push:
    branches:
      - "dev"

jobs:
  build:
    name: Build binary CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux, windows-6.3, darwin-10.14 ]
        goarch: [ "386", amd64, arm64 ]
        exclude:
          - goos: darwin-10.14
            goarch: "386"
          - goos: windows-6.3
            goarch: arm64
        include:
          - goos: android
            goarch: arm64
    steps:
      - uses: actions/checkout@v3

      - name: Set Environment
        run: |
          echo "SHASHORT=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "BUILDTIME=$(date +'%Y-%m-%dT%H:%M:%SZ' -u)" >> $GITHUB_ENV

      - name: Set LDFLAGS
        run: |
          echo "LDFLAGS=-w -s -X 'MacArthurGo/base.Version=${SHASHORT}' -X 'MacArthurGo/base.Branch=Beta/dev' -X 'MacArthurGo/base.BuildTime=${BUILDTIME}'" >> $GITHUB_ENV

      - name: Setup UPX
        run: |
          cd ..
          wget https://github.com/upx/upx/releases/download/v4.2.1/upx-4.2.1-amd64_linux.tar.xz
          tar xf upx-4.2.1-amd64_linux.tar.xz
          echo "upx=../upx-4.2.1-amd64_linux/upx" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Set up xgo
        if: ${{ matrix.goos!='android' }}
        run: |
          docker pull techknowlogick/xgo:latest
          go install src.techknowlogick.com/xgo@latest

      - name: Set up NDK
        uses: nttld/setup-ndk@v1
        if: ${{ matrix.goos=='android' }}
        id: setup-ndk
        with:
          ndk-version: r26b
          add-to-path: true
          
      - name: Build
        if: ${{ matrix.goos!='android' }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          NAME: MacArthurGo
          BINDIR: bin
          CGO_ENABLED: 1
        run: |
          mkdir bin
          mkdir out
          xgo --targets=${GOOS}/${GOARCH} -ldflags="${LDFLAGS}" --out ${BINDIR}/${NAME} ./
          if [ $GOOS != "windows-6.3" ]; then chmod +x ${BINDIR}/${NAME}-*; fi
          if [ $GOOS != "darwin-10.14" ]; then ${upx} --lzma --best ${BINDIR}/${NAME}-*; fi

      - name: Build Android
        if: ${{ matrix.goos=='android' }}
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          NAME: MacArthurGo
          BINDIR: bin
          CGO_ENABLED: 1
        run: |
          mkdir bin
          CC=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android33-clang
          CC=${CC} go build -ldflags "${LDFLAGS}" -o ${BINDIR}/${NAME}-${GOOS}-${GOARCH} ./
          chmod +x ${BINDIR}/${NAME}-${GOOS}-${GOARCH}
          ${upx} --lzma --best ${BINDIR}/${NAME}-${GOOS}-${GOARCH}


      - name: Upload To Artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}-${{ env.SHASHORT }}
          path: |
            bin/*
