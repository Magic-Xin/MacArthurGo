name: Build Dev

on:
  workflow_dispatch:
  push:
    branches:
      - "dev"

env:
  COMMIT_ID: "${{ github.sha }}"

jobs:
  build:
    name: Build binary CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows-6.3, darwin-10.14 ]
        goarch: [ "386", amd64, arm64 ]
        exclude:
          - goos: darwin-10.14
            goarch: "386"
          - goos: windows-6.3
            goarch: arm64
    steps:
      - uses: actions/checkout@v3

      - name: Setup UPX
        run: |
          cd ..
          wget https://github.com/upx/upx/releases/download/v4.2.1/upx-4.2.1-amd64_linux.tar.xz
          tar xf upx-4.2.1-amd64_linux.tar.xz
          echo "upx=../upx-4.2.1-amd64_linux/upx" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Set up xgo
        run: |
          docker pull techknowlogick/xgo:latest
          go install src.techknowlogick.com/xgo@latest
          
      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          NAME: MacArthurGo
          BINDIR: bin
          OUTDIR: out
          CGO_ENABLED: 1
        run: |
          mkdir bin
          mkdir out
          xgo --targets=$GOOS/$GOARCH -ldflags="-w -s" --out $BINDIR/MacArthurGo ./
          if [ $GOOS != "windows-6.3" ]; then chmod +x $BINDIR/MacArthurGo-*; fi
          if [ $GOOS != "darwin-10.14" ]; then ${upx} --lzma --best $BINDIR/MacArthurGo-*; fi
          if [ $GOOS != "windows-6.3" ]; then cd $BINDIR && tar -zcvf ../$OUTDIR/$NAME.tar.gz MacArthurGo-*; else cd $BINDIR && zip -v9 ../$OUTDIR/$NAME.zip MacArthurGo-*; fi

      - name: Upload To Artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}-${{ COMMIT_ID::7 }}
          path: |
            out/*.tar.gz
            out/*.zip
